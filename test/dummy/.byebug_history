exit
JSON.parse(response)
res
exit
{a:1}.to_a
{a:1}.to_s
methods
continue
methods
continue
exit
!!!
step
stpe
self
methods
continue
help
step
methods
step
methods
step
methods
step
exit
methods
method
exit
params
exit
params
exit
self.class
self
exit
self.class
self
exit
handle_response(res, &block)
JSON.parse(res)['results']
JSON.parse(response)['results']
res
exit
block_given? ? yield(obj) : klass.new(res)
block_given?
step
exit
res
exit
(obj.is_a?(Hash) ? klass.new(obj) : obj)
obj
step
res
exit
JSON.parse res
res
exit
JSON.parse res
res
exit
res
exit
a.class
a= handle_response res
a=_
handle_response res
exit
res.is_a? Array
res
exit
super
data.class
data
exit
output
_pry_
value
exit
self
get self.zombie_path, zombie_params
exit
klass.to_s.demodulize.underscore
klass.to_s.demodulize
klass.to_s
klass.name
klass
ls
self
